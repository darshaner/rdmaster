---

#- name: Install Docker on docker_registry_host
#  hosts: docker_registry_host
#  roles:
#    - ../roles/docker_install

- name: Deploy Docker registry on docker_registry_host
  hosts: docker_registry_host
  become: yes
  roles:
    - role: ../roles/docker_compose_deploy
  vars:
    app: "{{ docker_registry_host.app }}"
    services: "{{ docker_registry_host.services }}"
    networks: "{{ docker_registry_host.networks }}"
    volumes: "{{ docker_registry_host.volumes }}"

- name: Update HAProxy on haproxy_host
  hosts: docker_host_runner 
  become: yes
  roles:
    - ../roles/dyn_haproxy
  vars:
    services: "{{ docker_registry_host.services }}"
    networks: "{{ docker_registry_host.networks }}"
    volumes: "{{ docker_registry_host.volumes }}"

- name: Provision Cloudflare for Docker registry 
  hosts: docker_registry_host
  become: yes
  gather_facts: no
  roles:
    - role: ../roles/cloudflare
  vars:
    services: "{{ docker_registry_host.services }}"
    networks: "{{ docker_registry_host.networks }}"
    volumes: "{{ docker_registry_host.volumes }}"

#- name: Build custom Docker image on docker_builder
#  hosts: docker_builder
#  roles:
#    - ../roles/docker_build

- name: Deploy Docker Compose with custom image on docker_host
  hosts: docker_host_runner
  become: yes
  roles:
    - ../roles/docker_compose_deploy
  vars:
    app: "{{ docker_host_runner.app }}"
    services: "{{ docker_host_runner.services }}"
    networks: "{{ docker_host_runner.networks }}"
    volumes: "{{ docker_host_runner.volumes }}"

- name: Update HAProxy on haproxy_host
  hosts: docker_host_runner 
  become: yes
  roles:
    - ../roles/dyn_haproxy
  vars:
    services: "{{ docker_host_runner.services }}"
    networks: "{{ docker_host_runner.networks }}"
    volumes: "{{ docker_host_runner.volumes }}"

- name: Provision Cloudflare for Docker services 
  hosts: docker_host_runner 
  become: yes
  gather_facts: no
  roles:
    - role: ../roles/cloudflare
  vars:
    services: "{{ docker_host_runner.services }}"
    networks: "{{ docker_host_runner.networks }}"
    volumes: "{{ docker_host_runner.volumes }}"

- name: Provision Cloudflare for Static services 
  hosts: docker_host_runner 
  become: yes
  gather_facts: no
  roles:
    - role: ../roles/cloudflare
  vars:
    services: "{{ docker_host_runner.static_cf_services }}"